# Find the largest prime factor of 600851475143

( num1  600851475143 )
( num2  13195 )

( square  dup * )
( divides  % 0 == )

( isprime
  [ 1 <= ]      [ drop False return ] when
  [ 3 <= ]      [ drop True  return ] when
  [ 2 divides ] [ drop False return ] when
  [ 3 divides ] [ drop False return ] when
  5:i 2:w
  [ i square >= ]
  [ [ i divides ] [ drop False return ] when
    i w + :i
    6 w - :w ]
  while
  drop True
)

# a short circuit `bi and` would be useful here, since we
# only want to compute the second part of bi if the first
# part was true (the `isprime` function is expensive)
( primefactors
  d"Naive prime factorization based on checking each number"
  :n
  n @sqrt int :r
  2  # factor to check and increment
  [ r <= ]
  [ [ n swap divides ]
    [ [ isprime ] [ dup ] when ]
    when
    ++ ]
  while
  drop
)
